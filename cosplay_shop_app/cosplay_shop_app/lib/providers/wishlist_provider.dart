// lib/providers/wishlist_provider.dart
import 'package:flutter/material.dart';
import '../models/product.dart';
import '../services/wishlist_service.dart';

class WishlistProvider with ChangeNotifier {
  final WishlistService _service = WishlistService();
  
  List<Product> _items = [];
  bool _loading = false;
  String? _error;

  List<Product> get items => _items;
  bool get loading => _loading;
  String? get error => _error;
  
  int get itemCount => _items.length;

  // L·∫•y danh s√°ch y√™u th√≠ch t·ª´ server
  Future<void> loadWishlist() async {
    _loading = true;
    _error = null;
    notifyListeners();

    try {
      _items = await _service.getWishlist();
      print('‚úÖ Loaded ${_items.length} wishlist items');
    } catch (e) {
      _error = e.toString().replaceAll('Exception: ', '');
      print('‚ùå Load wishlist error: $_error');
    } finally {
      _loading = false;
      notifyListeners();
    }
  }

  // Th√™m s·∫£n ph·∫©m v√†o wishlist
  Future<bool> addToWishlist(String productId) async {
    try {
      print('‚ûï Adding product $productId to wishlist');
      await _service.addToWishlist(productId);
      await loadWishlist(); // Reload wishlist
      print('‚úÖ Added to wishlist successfully');
      return true;
    } catch (e) {
      _error = e.toString().replaceAll('Exception: ', '');
      print('‚ùå Add to wishlist error: $_error');
      notifyListeners();
      return false;
    }
  }

  // X√≥a s·∫£n ph·∫©m kh·ªèi wishlist
  Future<bool> removeFromWishlist(String productId) async {
    try {
      print('‚ûñ Removing product $productId from wishlist');
      await _service.removeFromWishlist(productId);
      _items.removeWhere((item) => item.id == productId);
      print('‚úÖ Removed from wishlist successfully');
      notifyListeners();
      return true;
    } catch (e) {
      _error = e.toString().replaceAll('Exception: ', '');
      print('‚ùå Remove from wishlist error: $_error');
      notifyListeners();
      return false;
    }
  }

  // Toggle wishlist (th√™m/x√≥a)
  Future<bool> toggleWishlist(String productId) async {
    if (isInWishlist(productId)) {
      return await removeFromWishlist(productId);
    } else {
      return await addToWishlist(productId);
    }
  }

  // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong wishlist ch∆∞a
  bool isInWishlist(String productId) {
    final result = _items.any((item) => item.id == productId);
    print('üîç Product $productId in wishlist: $result');
    return result;
  }

  // Clear error
  void clearError() {
    _error = null;
    notifyListeners();
  }
}